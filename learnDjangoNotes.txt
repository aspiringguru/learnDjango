
https://github.com/aspiringguru/learnDjango

https://consideratecode.com/2018/05/02/django-2-0-url-to-path-cheatsheet/

https://docs.djangoproject.com/en/2.2/intro/install/
we only want version 2.2.x


conda deactivate
deactivate
python3 -m venv venv
source venv/bin/activate


pip install python-dotenv
pip install yolk3k
yolk -V django

pip install django==2.2.9


https://docs.djangoproject.com/en/2.2/intro/tutorial01/
python -m django --version

which django-admin
django-admin --version

#this creates a project, one project per website.
django-admin startproject mysite

cd mysite
pwd
#/blah...../learnDjango/mysite
python manage.py runserver

http://localhost:8000/

[screenshot django installed]

python manage.py runserver 0:5500
#shorthand for 0.0.0.0 allows connection from anywhere. insecure.
python manage.py runserver 5500
#better since can only connect from local machine(?), or via nginx

#using this since my local nginx config maps my tbxdata.com to local port 5500
#my nginx also has certs and http auto redirect to https
https://tbxdata.com/

#this creates app 'polls', can have multiple apps within a website (project)
python manage.py startapp polls

#-------------------------------------------------------------------------------
#update .gitignore and clear directory that should not be in repo
git rm -r --cached  mysite/mysite/__pycache__/
git commit -m 'Remove the now ignored directory "__pycache__"'
git push
#-------------------------------------------------------------------------------
[tree_create_app1.png]

polls/views.py

polls/urls.py


nb: need to import path & include

python manage.py migrate
python manage.py runserver 5500
#nb if we go to this url, will get the error below.
https://tbxdata.com/
[polls_route_error1.png]
#-------------------------------------------------------------------------------
Using the URLconf defined in mysite.urls, Django tried these URL patterns, in this order:

polls/
admin/
The empty path didn't match any of these.
#-------------------------------------------------------------------------------
https://tbxdata.com/polls/
this url works.
[polls_route_error1.png]
#-------------------------------------------------------------------------------

#end https://docs.djangoproject.com/en/2.2/intro/tutorial01/

#start https://docs.djangoproject.com/en/2.2/intro/tutorial02/
[git commit = https://github.com/aspiringguru/learnDjango/commit/0dd204ff84f1ab9bf4eab1d1fe6938713cc252e6]

mysite/settings.py

#leave TIME_ZONE as is.
TIME_ZONE = 'UTC'

python manage.py migrate


#we need to add our webapp to mysite/settings.py
#within polls/apps.py  (generated by )
# there is 'class PollsConfig(AppConfig)'
# so path from polls/apps.py + class PollsConfig is 'polls.apps.PollsConfig'
# ie if we generated an app using 'python manage.py startapp appname'
# then path to add would be 'appname.apps.AppnameConfig'


python manage.py makemigrations polls
#------------------
Migrations for 'polls':
polls/migrations/0001_initial.py
- Create model Question
- Create model Choice
#------------------
#creates polls/migrations/0001_initial.py

python manage.py sqlmigrate polls 0001
#this output below from default sqlite database
#the tutorial shows output for a postgresql database
#------------------
BEGIN;
--
-- Create model Question
-- CREATE TABLE "polls_question" (
        "id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
        "question_text" varchar(200) NOT NULL,
        "pub_date" datetime NOT NULL);
--
-- Create model Choice
-- CREATE TABLE "polls_choice" (
      "id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
      "choice_text" varchar(200) NOT NULL,
      "votes" integer NOT NULL,
      "question_id" integer NOT NULL
              REFERENCES "polls_question" ("id") DEFERRABLE INITIALLY DEFERRED);
-- CREATE INDEX "polls_choice_question_id_c5b4b260" ON "polls_choice" ("question_id");
COMMIT;
#------------------
python manage.py check
#System check identified no issues (0 silenced).

python manage.py migrate
#------------------
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, polls, sessions
Running migrations:
  Applying polls.0001_initial... OK
#------------------
#hop into the interactive Python shell and play around with the free API Django gives you
python manage.py shell
#edit polls/models.py
python manage.py shell


python manage.py createsuperuser
#username = admin
#password = 123abc123abc


python manage.py runserver 5500

https://tbxdata.com/admin
[login_1.png]

login using the username and password above
[logged_in_1.png]


#add class Question to polls/admin.py file.
#server automatically restarts
[Class_Question_added_2_admin_py.png]


[end part 2 tutorial]
[git commit > https://github.com/aspiringguru/learnDjango/commit/03f8daf2ce3df1123f8ea133f8d6f8245d48e88a]

[set part 3]
https://docs.djangoproject.com/en/2.2/intro/tutorial03/
cd /mnt/f/2020_working/coding/learnDjango/
conda deactivate
source venv/bin/activate
cd mysite
python manage.py runserver 5500


#minor experiment.
add to polls/models.py
question_prompt = models.CharField(max_length=200)

python manage.py makemigrations polls
[add_non_nullable_field_question_during_migration.png]
#we need to set a default. ie
question_prompt = models.CharField(max_length=200, default='')

python manage.py makemigrations polls
#nb polls/migrations now contains 0002_question_question_prompt.py
#nbb: appname/migrations filename format is xxxx_class-name_new-field-name.py
python manage.py sqlmigrate polls 0002
[unapplied_migration_warning.png]
python manage.py migrate
[applying_migrations]
python manage.py runserver 0:5500

delete the above addition to polls/models.py
python manage.py makemigrations polls
ls polls/migrations
python manage.py sqlmigrate polls 0003
python manage.py migrate
#python manage.py runserver 0:5500 #for some reason this shortcut stopped working.
python manage.py runserver 0.0.0.0:5500
[web_page_recent_actions_shown.png]

start material in part 3
https://docs.djangoproject.com/en/2.2/intro/tutorial03/
[https://github.com/aspiringguru/learnDjango/commit/7d5a5ca67155fafcce7efaa6826b1ecd1b523846]


nb: edit files polls/urls.py and polls/views.py do not need to migrate.
django server in dev mode auto updates.

added views to polls/views.py & routes to  polls.urls

[https://github.com/aspiringguru/learnDjango/commit/aef622c6bdedb9424b6aa69c704e7686209a524a]

now update views for more functionality

create dir structure and file
mysite\polls\templates\polls\index.html

pre index.html
[part3_basic_index_request.png]

after index.html and update polls/views.py to use the index.html template.
[part3_after_adding_template_index.png]


update view and reference template at  polls/templates/polls/detail.html
[part3_template_does_note_exist.png]
error for missing template.
add template.

[part3_sample_404_error.png]

add namespace in template, but leave out from urls.py
[part3_NoReverseMatch_not_a_registered_namespace.png]
add the namespace to polls then error goes away.

end part 3
[https://github.com/aspiringguru/learnDjango/commit/a1afddc9088e989d4b7c356988088bb29d2300a4]

start part 4

[part4_added_form_no_choice_data_yet.png]



[part4_polls_x_results_pre_template_update.png]

changed to  generic view
end part 4.
https://github.com/aspiringguru/learnDjango/commit/ade1e6890d31f4ddc0200ca409559d9ee9d8b832

start part 5
https://docs.djangoproject.com/en/2.2/intro/tutorial05/

Writing our first test

cd /mnt/f/2020_working/coding/learnDjango/
conda deactivate
source venv/bin/activate
cd mysite
ls -la

python manage.py shell

import datetime
from django.utils import timezone
from polls.models import Question

future_question = Question(pub_date=timezone.now() + datetime.timedelta(days=30))
future_question
type(future_question)
future_question.was_published_recently()

#nb: we know polls/models.py defines class Question and method was_published_recently

python manage.py test polls

[part5_test_results.png]

[part5_test_results_pass.png]
[part5_tests_3_results.png]
#-------------------------------------------
#NB:  when using "python manage.py shell"
#we use
from polls.models import Question
#while in tests.py we use
from .models import Question
#-------------------------------------------


cd /mnt/f/2020_working/coding/learnDjango/
conda deactivate
source venv/bin/activate
cd mysite
python manage.py shell

from django.test.utils import setup_test_environment
setup_test_environment()

from django.test import Client
# create an instance of the client for our use
client = Client()

# get a response from '/'
response = client.get('/')

# we should expect a 404 from that address; if you instead see an
# "Invalid HTTP_HOST header" error and a 400 response, you probably
# omitted the setup_test_environment() call described earlier.
#teardown_test_environment()
response.status_code
response.content


response = client.get('/polls')
response
response.status_code
response.content

response = client.get('/admin')
response
response.status_code
response.content


from django.urls import reverse
response = client.get(reverse('polls:index'))
response
response.status_code
response.context['latest_question_list']


#The list of polls shows polls that aren’t published yet
#(i.e. those that have a pub_date in the future). Let’s fix that.

cd /mnt/f/2020_working/coding/learnDjango/mysite
python manage.py test polls

polls/tests.py
QuestionModelTests - 3 tests
QuestionIndexViewTests - 5 tests
QuestionDetailViewTests - 2 tests
----------------------------------
10 tests in total


end part 5, complete all tests.
[part5_final_Test_results.png]
[https://github.com/aspiringguru/learnDjango/commit/8d266b8e7acf5891f127ebf3f4c6f20d7e111a22]

start part 6

#some guys git repo that appears to work ok.
https://github.com/cdubz/first-django-app

python manage.py runserver 0.0.0.0:5500
#may have a caching issue.
http://localhost:5500/polls/
http://localhost:5500/static/polls/style.css

end part 6
start part 7

https://docs.djangoproject.com/en/2.2/intro/tutorial07/

added this to polls/admin.py, swap lines to change order of form elements.
#------------------------------------------------
class QuestionAdmin(admin.ModelAdmin):
    #fields = ['pub_date', 'question_text']
    fields = ['question_text', 'pub_date']
#------------------------------------------------

[part7_change_question_order.png]
[part7_change_question_order_2.png]


[part7_Adding_related_objects_in_form.png]
[part7_admin.TabularInline.png]
[part7_filter_added.png]
[part7_search_added.png]

#
$ python -c "import django; print(django.__path__)"
['/mnt/f/2020_working/coding/learnDjango/venv/lib/python3.6/site-packages/django']

cd /mnt/f/2020_working/coding/learnDjango/venv/lib/python3.6/site-packages/django
cp contrib/admin/templates/admin/base_site.html /mnt/f/2020_working/coding/learnDjango/mysite/templates/admin/
cd /mnt/f/2020_working/coding/learnDjango/mysite/templates/admin/

ls /mnt/f/2020_working/coding/learnDjango/venv/lib/python3.6/site-packages/django/contrib/admin/templates/admin/
cd /mnt/f/2020_working/coding/learnDjango/mysite/templates/admin/
cp /mnt/f/2020_working/coding/learnDjango/venv/lib/python3.6/site-packages/django/contrib/admin/templates/admin/base.html .

[part7_copy_&_edit_base_templates.png]

end part 7
